{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 package com.example.tests;\
\
import java.util.regex.Pattern;\
import java.util.concurrent.TimeUnit;\
import org.junit.*;\
import static org.junit.Assert.*;\
import static org.hamcrest.CoreMatchers.*;\
import org.openqa.selenium.*;\
import org.openqa.selenium.firefox.FirefoxDriver;\
import org.openqa.selenium.support.ui.Select;\
\
public class AddBar \{\
  private WebDriver driver;\
  private String baseUrl;\
  private boolean acceptNextAlert = true;\
  private StringBuffer verificationErrors = new StringBuffer();\
\
  @Before\
  public void setUp() throws Exception \{\
    driver = new FirefoxDriver();\
    baseUrl = "https://www.google.com/";\
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\
  \}\
\
  @Test\
  public void testAddBar() throws Exception \{\
    driver.get("https://shisha-time.herokuapp.com/");\
    driver.findElement(By.id("formBasicEmail")).click();\
    driver.findElement(By.id("formBasicEmail")).clear();\
    driver.findElement(By.id("formBasicEmail")).sendKeys("mehmed.tukulic@hotmail.com");\
    driver.findElement(By.id("formBasicPassword")).click();\
    driver.findElement(By.id("formBasicPassword")).clear();\
    driver.findElement(By.id("formBasicPassword")).sendKeys("mehmed123");\
    driver.findElement(By.xpath("//button[@type='submit']")).click();\
    driver.findElement(By.linkText("New Bar")).click();\
    driver.findElement(By.name("name")).click();\
    driver.findElement(By.name("name")).clear();\
    driver.findElement(By.name("name")).sendKeys("test");\
    driver.findElement(By.xpath("//button[@type='submit']")).click();\
    assertEquals("Bar successfully added.", closeAlertAndGetItsText());\
  \}\
\
  @After\
  public void tearDown() throws Exception \{\
    driver.quit();\
    String verificationErrorString = verificationErrors.toString();\
    if (!"".equals(verificationErrorString)) \{\
      fail(verificationErrorString);\
    \}\
  \}\
\
  private boolean isElementPresent(By by) \{\
    try \{\
      driver.findElement(by);\
      return true;\
    \} catch (NoSuchElementException e) \{\
      return false;\
    \}\
  \}\
\
  private boolean isAlertPresent() \{\
    try \{\
      driver.switchTo().alert();\
      return true;\
    \} catch (NoAlertPresentException e) \{\
      return false;\
    \}\
  \}\
\
  private String closeAlertAndGetItsText() \{\
    try \{\
      Alert alert = driver.switchTo().alert();\
      String alertText = alert.getText();\
      if (acceptNextAlert) \{\
        alert.accept();\
      \} else \{\
        alert.dismiss();\
      \}\
      return alertText;\
    \} finally \{\
      acceptNextAlert = true;\
    \}\
  \}\
\}\
}